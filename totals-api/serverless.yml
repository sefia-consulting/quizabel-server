service: totals

# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    REGION: us-east-1
    STAGE: dev
  region: ${self:provider.environment.REGION}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
    - Effect: Allow
      Action:
        - sqs:DeleteMessage
        - sqs:ReceiveMessage
      Resource: arn:aws:sqs:*:*:totals-${opt:stage, self:provider.stage}-increment
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource: arn:aws:lambda:*:*:function:quiz-${opt:stage, self:provider.stage}-get

functions:
  handleMessages:
    handler: handler.handleMessages
    name: ${self:service}-${opt:stage, self:provider.stage}-handleMessages
    events:
      - schedule:
          rate: rate(1 minute)
          enabled: false
  init:
    handler: handler.init
    name: ${self:service}-${opt:stage, self:provider.stage}-init
    events:
      - http:
          path: totals/init
          method: post
          cors: true
  increment:
    handler: handler.increment
    name: ${self:service}-${opt:stage, self:provider.stage}-increment
    events:
      - http:
          path: totals/increment/{id}
          method: post
          cors: true
  get:
    handler: handler.get
    name: ${self:service}-${opt:stage, self:provider.stage}-get
    events:
      - http:
          path: totals/{id}
          method: get
          cors: true

resources:
  Resources:
    Messages:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: totals-${opt:stage, self:provider.stage}-increment
        MessageRetentionPeriod: 1209600
        VisibilityTimeout: 60
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
            - MessagesDeadLetterQueue
            - Arn
          maxReceiveCount: 10
    MessagesDeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: totals-${opt:stage, self:provider.stage}-increment-dead-letter-queue
        MessageRetentionPeriod: 1209600
    TotalsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
